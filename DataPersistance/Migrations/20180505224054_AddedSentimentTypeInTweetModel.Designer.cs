// <auto-generated />
using DataPersistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DataPersistance.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20180505224054_AddedSentimentTypeInTweetModel")]
    partial class AddedSentimentTypeInTweetModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataDomain.DataModel.HashtagHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HashtagValue");

                    b.Property<int>("NegativeSentimentCounter");

                    b.Property<int>("NeutralSentimentCounter");

                    b.Property<int>("PositiveSentimentCounter");

                    b.Property<DateTime>("SearchTime");

                    b.Property<Guid?>("TweetModelId");

                    b.HasKey("Id");

                    b.HasIndex("TweetModelId");

                    b.ToTable("HashtagHistoryModel");
                });

            modelBuilder.Entity("DataDomain.DataModel.Tweet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HashtagSearchValue");

                    b.Property<string>("Language");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("MediaUrlImage");

                    b.Property<int>("NumberOfLikes");

                    b.Property<int>("RetweetCount");

                    b.Property<int>("SentimentType");

                    b.Property<DateTime>("TweetDate");

                    b.Property<long>("TweetId");

                    b.Property<string>("TweetText");

                    b.Property<string>("TweetUsername");

                    b.HasKey("Id");

                    b.ToTable("TweetModel");
                });

            modelBuilder.Entity("DataDomain.DataModel.UserInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("TweetUserId");

                    b.Property<string>("TweetUsername");

                    b.HasKey("Id");

                    b.ToTable("UserInformation");
                });

            modelBuilder.Entity("DataDomain.DataModel.HashtagHistory", b =>
                {
                    b.HasOne("DataDomain.DataModel.Tweet", "TweetModel")
                        .WithMany()
                        .HasForeignKey("TweetModelId");
                });
#pragma warning restore 612, 618
        }
    }
}
